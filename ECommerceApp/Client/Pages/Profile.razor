@page "/profile"
@using ECommerceApp.Client.Services.AuthService
@using ECommerceApp.Core.Dto
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization;
@inject IAuthService AuthService
@attribute [Authorize]

<PageTitle>profile</PageTitle>
<h3>Profile</h3>

<AuthorizeView>
    <h3>Merhaba <i>@context.User.Identity.Name</i> :D </h3>
</AuthorizeView>
<h5>Change Password</h5>

<EditForm Model="userChangePasswordDto" OnValidSubmit="ChangePassword">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="mb-3">
        <label for="password">New Password</label>
        <InputText id="password" @bind-Value="userChangePasswordDto.Password" class="form-control" type="password" />
        <ValidationMessage For="@(() => userChangePasswordDto.Password)" />
    </div>
    <div class="mb-3">
        <label for="confirmPassword">Confirm New Password</label>
        <InputText id="confirmPassword" @bind-Value="userChangePasswordDto.ConfirmPassword" class="form-control" type="password" />
        <ValidationMessage For="@(() => userChangePasswordDto.ConfirmPassword)" />
    </div>
    <button type="submit" class="btn btn-primary">Apply</button>
</EditForm>
@message

@code {
    UserChangePasswordDto userChangePasswordDto = new UserChangePasswordDto();
    string message = string.Empty;

    private async Task ChangePassword()
    {
        var result = await AuthService.ChangePassword(userChangePasswordDto);
        if (result.Errors!=null)
        {
            message = "Fail";
        }
        else
        {
            message = "success";
        }

    }
}