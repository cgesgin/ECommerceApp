@page "/admin/products"
@using ECommerceApp.Client.Services.ProductService;
@using Microsoft.AspNetCore.Authorization;

@inject IProductService ProductService
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Admin")]

<h3>Ürünler</h3>

@if (ProductService.AdminProducts == null)
{
    <span>Yükleniyor....</span>
}
else
{
    <button class="btn btn-primary float-end" @onclick="CreateProduct">
        <i class="oi oi-plus"></i> Yeni ürün ekle
    </button>
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>ürün</th>
                <th>türü</th>
                <th>fiyat</th>
                <th>görünürlük</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <Virtualize Items="ProductService.AdminProducts" Context="product">
                <tr>
                    <td><img src="@product.ImageUrl" /></td>
                    <td>@product.Title</td>
                    <td>
                        @if (!string.IsNullOrEmpty(product.ImageUrl))
                        {
                            <img src="@product.ImageUrl" />
                        }
                        else if (product.Images.Count > 0)
                        {
                            <img src="@product.Images[0].Data" />
                        }
                    </td>
                    <td>@product.Title</td>
                    <td>
                        
                        @foreach (var variant in product.ProductVariants)
                    {
                        <span>@variant.ProductType.Name</span>

                        <br />
                    }
                </td>
                <td>
                    @foreach (var variant in product.ProductVariants)
                    {
                        <span>@variant.Price</span>

                        <br />
                    }
                </td>
                <td>@(product.Visible ? "✔️" : "")</td>
                <td>
                    <button class="btn btn-primary" @onclick="(() => EditProduct(product.Id))">
                        <i class="oi oi-pencil"></i>
                    </button>
                </td>
            </tr>
        </Virtualize>
    </tbody>
</table>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        await ProductService.GetAdminProducts();
    }

    void EditProduct(int productId)
    {
        NavigationManager.NavigateTo($"admin/product/{productId}");
    }

    void CreateProduct()
    {
        NavigationManager.NavigateTo("admin/product");
    }
}