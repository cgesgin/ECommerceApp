@using ECommerceApp.Client.Services.BasketService
@using Microsoft.AspNetCore.Components.Authorization

@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject IBasketService BasketService

<div class="dropdown">
     <button @onclick="ToggleUserMenu"
        @onfocus="HideUserMenu"
        class="btn btn-secondary dropdown-toggler user-button">
        <i class="oi oi-person"></i>
    </button>
     <div class="dropdown-menu dropdown-menu-right @UserMenuCssClass">
    <AuthorizeView>
            <Authorized>
                    <a href="profile" class="dropdown-item">Profile</a>
                    <a href="orders" class="dropdown-item">Siparişler</a>
                    <hr/>
                    <button class="dropdown-item" @onclick="Logout">Çıkış Yap</button> 
            </Authorized>
            <NotAuthorized>
                        <a href="register" class="dropdown-item">Kayıt ol</a>
                       <a href="login?returnUrl=@NavigationManager.ToBaseRelativePath(NavigationManager.Uri)" class="dropdown-item">Giriş yap</a>
            </NotAuthorized>
     </AuthorizeView>
   </div>
</div>
@code {
    private bool showUserMenu = false;

    private string UserMenuCssClass => showUserMenu ? "show-menu" : null;

    private void ToggleUserMenu()
    {
        showUserMenu = !showUserMenu;
    }

    private async Task HideUserMenu()
    {
        await Task.Delay(200);
        showUserMenu = false;
    }

    private async Task Logout()
    {
        await LocalStorage.RemoveItemAsync("authToken");
        await BasketService.BasketItemsCount();
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        
        NavigationManager.NavigateTo("");
    }
}